plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.1'
    id 'io.spring.dependency-management' version '1.1.5'
    id "org.springdoc.openapi-gradle-plugin" version "1.9.0"
    id "org.openapi.generator" version "7.7.0"
}

group = 'com.game.monitor'
version = '0.0.1-SNAPSHOT'

var generatedSourcesDir = "$rootDir/backend/build/generated"

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-api:2.6.0'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.6'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.6'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

openApiGenerate {
    generatorName = "spring"
    inputSpec = "$rootDir/api/src/game-monitor.yaml"
    outputDir = "$generatedSourcesDir"
    apiPackage = "com.gamemonitor.api"
    invokerPackage = "com.gamemonitor.api"
    modelPackage = "com.gamemonitor.api.model"
    configOptions = [
            library: "spring-boot",
            openApiNullable: "false",
            interfaceOnly: "true",
            dateLibrary: "java8",
            useSpringBoot3: "true",
            delegatePattern: "true",
            generateConstructorWithAllArgs: "true",
            generatedConstructorWithRequiredArgs: "true"
    ]
    version = "1.0.0"
}


sourceSets {
    getByName("main") {
        java {
            srcDir("$generatedSourcesDir/src/main/java")
        }
    }
}

testing {
    suites {
        // Add a new test suite
        integrationTest(JvmTestSuite) {
            useJUnitJupiter()
        }
    }
}

tasks.named('test', Test) {
    useJUnitPlatform()
}

tasks.named('check') {
    dependsOn(integrationTest)
}

