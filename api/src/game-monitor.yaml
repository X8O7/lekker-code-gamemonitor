openapi: 3.0.3
info:
  title: Game Monitor API
  description: Game Monitor API
  version: 1.0.0
paths:
  /register:
    post:
      operationId: postRegister
      description: Register and create a new user
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegisterUser'
      responses:
        '200':
          $ref: '#/components/responses/ResponseUser200'
        default:
          $ref: '#/components/responses/ResponseError'
  /authenticate:
    post:
      operationId: postAuthenticate
      description: Get user details for a specific user
      tags:
        - Security
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        '200':
          $ref: '#/components/responses/ResponseAuthentication200'
        default:
          $ref: '#/components/responses/ResponseError'
  /users:
    get:
      operationId: getUsers
      description: Get a list of users
      tags:
        - User
      responses:
        '200':
          $ref: '#/components/responses/ResponseUsers200'
        default:
          $ref: '#/components/responses/ResponseError'
  /user/{userId}:
    get:
      operationId: getUserById
      description: Get user details for a specific user
      tags:
        - User
      parameters:
        - name: userId
          in: path
          required: true
          description: ID as path variable
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/ResponseUser200'
        default:
          $ref: '#/components/responses/ResponseError'
  /teams:
    get:
      operationId: getTeams
      description: Get a list of all teams
      tags:
        - Team
      responses:
        '200':
          $ref: '#/components/responses/ResponseTeams200'
        default:
          $ref: '#/components/responses/ResponseError'
  /team:
    post:
      operationId: postCreateTeam
      description: Create a team
      tags:
        - Team
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TeamBase'
      responses:
        '200':
          $ref: '#/components/responses/ResponseTeam200'
        default:
          $ref: '#/components/responses/ResponseError'

components:
  schemas:
    Id:
      type: integer
      format: int32
    RegisterUser:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    User:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        rank:
          type: integer
        score:
          type: integer
        team:
          $ref: '#/components/schemas/Team'
      required:
        - id
        - name
    UserList:
      type: array
      items:
        $ref: '#/components/schemas/User'
    TeamBase:
      type: object
      properties:
        name:
          type: string
        maxMembers:
          type: integer
        ownerId:
          $ref: '#/components/schemas/Id'
      required:
        - name
        - ownerId
        - maxMembers
    Team:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        owner:
          $ref: '#/components/schemas/User'
      required:
        - id
        - name
    TeamList:
      type: array
      items:
        $ref: '#/components/schemas/Team'
    Credentials:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    Error:
      type: object
      properties:
        httpCode:
          type: integer
          format: int32
        errorMessage:
          type: string
      required:
        - httpCode
        - errorMessage
  responses:
    ResponseAuthentication200:
      description: Returns authenticated user
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    ResponseUser200:
      description: Returns a user
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/User"
    ResponseUsers200:
      description: Returns a list of users
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/UserList"
    ResponseTeam200:
      description: Returns a team
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Team"
    ResponseTeams200:
      description: Returns a list of users
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/TeamList"
    ResponseError:
      description: An unexpected error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"